------ Uninstall
ssh celeghin@192.168.1.180 /usr/local/bin/k3s-uninstall.sh; rm -rf /var/lib/rancher/; rm -rf /etc/rancher/;
ssh celeghin@192.168.1.182 /usr/local/bin/k3s-agent-uninstall.sh; rm -rf /var/lib/rancher/; rm -rf /etc/rancher/;
ssh celeghin@192.168.1.183 /usr/local/bin/k3s-agent-uninstall.sh; rm -rf /var/lib/rancher/; rm -rf /etc/rancher/;


------ Restart
ssh celeghin@192.168.1.180 sudo systemctl restart k3s
ssh celeghin@192.168.1.182 sudo systemctl restart k3s-agent
ssh celeghin@192.168.1.183 sudo systemctl restart k3s-agent


------ Install
rm ~/.kube/config
USER=celeghin
MASTER=192.168.1.180
CLUSTER=k3s-cluster

# ,metrics-server
k3sup install --cluster --k3s-extra-args '--disable traefik,servicelb' \
  --ip ${MASTER} --user ${USER} --merge --local-path $HOME/.kube/config \
  --context ${CLUSTER} --k3s-channel stable

export KUBECONFIG=~/.kube/config
kubectl config use-context ${CLUSTER}
kubectl get node -o wide
kubectl get all -n kube-system


----- Join nodes
USER=celeghin
MASTER=192.168.1.180
NODE=192.168.1.182
CLUSTER=k3s-cluster
k3sup join --host ${NODE} --user ${USER} --server-host ${MASTER} --k3s-channel stable



----- Install Load Balancer MetalLB
https://metallb.universe.tf/

kubectl apply -f metallb-native-0.13.7.yaml

kubectl get all -n metallb-system

# Wait for MetalLB conclusion
kubectl apply -f metallb-pool.yaml



----- Test MetalLB LoadBalancer
kubectl create deployment nginx --image nginx

kubectl expose deployment nginx --type LoadBalancer --port 80 --name nginx

sudo systemctl restart k3s

kubectl get service/mytest

kubectl run jvminfo --image celeguim/jvminfo:latest

kubectl expose pod/jvminfo --port 80 --target-port=8080 --type LoadBalancer

kubectl create deployment jvminfo --image celeguim/jvminfo:latest --replicas 3

kubectl expose deployment jvminfo --type LoadBalancer --port 80 --name jvminfo

kubectl create deployment jvminfo --image celeguim/jvminfo:arm64v8 --replicas 3


------ Install nginx ingress controller 
helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx

HELM_INSTALL_CMD="sudo cp /etc/rancher/k3s/k3s.yaml /root/.kube/config ; \
  sudo /snap/bin/helm upgrade --install ingress-nginx ingress-nginx \
  --repo https://kubernetes.github.io/ingress-nginx \
  --namespace ingress-nginx --create-namespace"

ssh celeghin@192.168.1.180 ${HELM_INSTALL_CMD}

# Watch for IP
kubectl --namespace ingress-nginx get services -o wide -w ingress-nginx-controller

- check controller version 
# namespace of your nginx ingress
ingress_ns="ingress-nginx"

# find running pod
podname=$(kubectl get pods -n $ingress_ns -l app.kubernetes.io/name=ingress-nginx --field-selector=status.phase==Running -o jsonpath='{.items[0].metadata.name}')

echo "Ingress Pod name: $podname"

# invoke controller with version flag
kubectl exec -it -n $ingress_ns $podname -- /nginx-ingress-controller --version

# test nginx ingress controller
deploy.ingress.yaml

kubectl exec -n ingress-nginx pod/ingress-nginx-controller-8574b6d7c9-wmq9p -- cat /etc/nginx/nginx.conf

----- Prometheus install
/snap/bin/helm repo add prometheus-community https://prometheus-community.github.io/helm-charts

/snap/bin/helm repo update

/snap/bin/helm install prometheus prometheus-community/prometheus

kubectl expose service prometheus-server --type=LoadBalancer --target-port=9090 --name=prometheus-server-ext


----- Grafana install
/snap/bin/helm repo add grafana https://grafana.github.io/helm-charts

/snap/bin/helm install grafana grafana/grafana

